name: Run tests
on: [push, pull_request]
jobs:
  run-tests:
#    name: Run automated tests
    env:
      GO111MODULE: on
      CHANGE_MINIKUBE_NONE_USER: true
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      GO_VERSION: 1.14.7
      MINIKUBE_VERSION: v1.12.1
      OPERATOR_SDK_VERSION: v0.17.0
      MINIKUBE_KUBERNETES_VERSION: v1.17.4
      HELM_VERSION: v3.3.1
      GOPATH: /home/runner/go
      APPLITOOLS_API_KEY: ${{ secrets.APPLITOOLS_API_KEY }}
      APPLITOOLS_BATCH_ID: ${{ github.sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Prepare go environment
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: go-dep
        run: make go-dependencies

      - name: verify
        run: make verify

#      - name: Prepare environment for e2e
#        run: |
#          sudo apt-get update
#          sudo apt-get install socat
#          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$MINIKUBE_KUBERNETES_VERSION/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
#          curl -Lo minikube https://storage.googleapis.com/minikube/releases/$MINIKUBE_VERSION/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
#          curl -Lo operator-sdk https://github.com/operator-framework/operator-sdk/releases/download/$OPERATOR_SDK_VERSION/operator-sdk-$OPERATOR_SDK_VERSION-x86_64-linux-gnu && chmod +x operator-sdk && sudo mv operator-sdk /usr/local/bin/
#          curl -Lo helm.tar.gz https://get.helm.sh/helm-$HELM_VERSION-linux-amd64.tar.gz && tar xzfv helm.tar.gz && sudo mv linux-amd64/helm /usr/local/bin/
#          sudo mkdir -p $HOME/.kube $HOME/.minikube
#          touch KUBECONFIG
#          sudo minikube start --vm-driver=none --kubernetes-version=$MINIKUBE_KUBERNETES_VERSION
#          sudo chown -R $USER $HOME/.kube $HOME/.minikube
#
#      - name: Jenkins Operator - e2e
#        run: make build e2e
#
#      - name: Jenkins Operator Helm Chart - e2e
#        run: make e2e BUILDTAGS=Helm E2E_TEST_SELECTOR='^.*Helm.*$'


      - name: Create success comment
        if:  steps.check.outputs.triggered == 'true' &&  ${{ success() }} && ${{ github.event_name == 'push' }}
        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": " [All tests passed.]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"')" }'

      - name: Create fail comment
        if:  steps.check.outputs.triggered == 'true' && ${{ failure() }} && ${{ github.event_name == 'push' }}
        env:
          URL: ${{ github.event.issue.comments_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
            -X POST \
            $URL \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITHUB_TOKEN" \
            --data '{ "body": ":facepalm: [Tests failed.]( https://github.com/'"$GITHUB_REPOSITORY"'/actions/runs/'"$GITHUB_RUN_ID"')" }'
